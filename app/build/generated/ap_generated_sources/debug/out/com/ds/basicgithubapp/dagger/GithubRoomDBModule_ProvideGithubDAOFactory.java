// Generated by Dagger (https://google.github.io/dagger).
package com.ds.basicgithubapp.dagger;

import com.ds.basicgithubapp.repo.room.GithubDAO;
import com.ds.basicgithubapp.repo.room.GithubRoomDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class GithubRoomDBModule_ProvideGithubDAOFactory implements Factory<GithubDAO> {
  private final GithubRoomDBModule module;

  private final Provider<GithubRoomDatabase> githubRoomDatabaseProvider;

  public GithubRoomDBModule_ProvideGithubDAOFactory(
      GithubRoomDBModule module, Provider<GithubRoomDatabase> githubRoomDatabaseProvider) {
    this.module = module;
    this.githubRoomDatabaseProvider = githubRoomDatabaseProvider;
  }

  @Override
  public GithubDAO get() {
    return provideInstance(module, githubRoomDatabaseProvider);
  }

  public static GithubDAO provideInstance(
      GithubRoomDBModule module, Provider<GithubRoomDatabase> githubRoomDatabaseProvider) {
    return proxyProvideGithubDAO(module, githubRoomDatabaseProvider.get());
  }

  public static GithubRoomDBModule_ProvideGithubDAOFactory create(
      GithubRoomDBModule module, Provider<GithubRoomDatabase> githubRoomDatabaseProvider) {
    return new GithubRoomDBModule_ProvideGithubDAOFactory(module, githubRoomDatabaseProvider);
  }

  public static GithubDAO proxyProvideGithubDAO(
      GithubRoomDBModule instance, GithubRoomDatabase githubRoomDatabase) {
    return Preconditions.checkNotNull(
        instance.provideGithubDAO(githubRoomDatabase),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
