// Generated by Dagger (https://google.github.io/dagger).
package com.ds.basicgithubapp.dagger;

import com.ds.basicgithubapp.repo.api.retrofit.GithubRepoService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class GithubApiModule_ProvideGithubRepoServiceFactory
    implements Factory<GithubRepoService> {
  private final GithubApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public GithubApiModule_ProvideGithubRepoServiceFactory(
      GithubApiModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public GithubRepoService get() {
    return provideInstance(module, retrofitProvider);
  }

  public static GithubRepoService provideInstance(
      GithubApiModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvideGithubRepoService(module, retrofitProvider.get());
  }

  public static GithubApiModule_ProvideGithubRepoServiceFactory create(
      GithubApiModule module, Provider<Retrofit> retrofitProvider) {
    return new GithubApiModule_ProvideGithubRepoServiceFactory(module, retrofitProvider);
  }

  public static GithubRepoService proxyProvideGithubRepoService(
      GithubApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideGithubRepoService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
