// Generated by Dagger (https://google.github.io/dagger).
package com.ds.basicgithubapp.viewmodel;

import android.app.Application;
import com.ds.basicgithubapp.repo.api.retrofit.GithubRepoService;
import com.ds.basicgithubapp.repo.room.GithubDAO;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class GithubRepoViewModel_Factory implements Factory<GithubRepoViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<GithubDAO> githubDAOProvider;

  private final Provider<GithubRepoService> getRepoServiceProvider;

  public GithubRepoViewModel_Factory(
      Provider<Application> applicationProvider,
      Provider<GithubDAO> githubDAOProvider,
      Provider<GithubRepoService> getRepoServiceProvider) {
    this.applicationProvider = applicationProvider;
    this.githubDAOProvider = githubDAOProvider;
    this.getRepoServiceProvider = getRepoServiceProvider;
  }

  @Override
  public GithubRepoViewModel get() {
    return provideInstance(applicationProvider, githubDAOProvider, getRepoServiceProvider);
  }

  public static GithubRepoViewModel provideInstance(
      Provider<Application> applicationProvider,
      Provider<GithubDAO> githubDAOProvider,
      Provider<GithubRepoService> getRepoServiceProvider) {
    return new GithubRepoViewModel(
        applicationProvider.get(), githubDAOProvider.get(), getRepoServiceProvider.get());
  }

  public static GithubRepoViewModel_Factory create(
      Provider<Application> applicationProvider,
      Provider<GithubDAO> githubDAOProvider,
      Provider<GithubRepoService> getRepoServiceProvider) {
    return new GithubRepoViewModel_Factory(
        applicationProvider, githubDAOProvider, getRepoServiceProvider);
  }

  public static GithubRepoViewModel newGithubRepoViewModel(
      Application application, GithubDAO githubDAO, GithubRepoService getRepoService) {
    return new GithubRepoViewModel(application, githubDAO, getRepoService);
  }
}
