// Generated by Dagger (https://google.github.io/dagger).
package com.ds.basicgithubapp.dagger;

import android.app.Application;
import com.ds.basicgithubapp.repo.room.GithubRoomDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class GithubRoomDBModule_ProvideGithubRoomDatabaseFactory
    implements Factory<GithubRoomDatabase> {
  private final GithubRoomDBModule module;

  private final Provider<Application> applicationProvider;

  public GithubRoomDBModule_ProvideGithubRoomDatabaseFactory(
      GithubRoomDBModule module, Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public GithubRoomDatabase get() {
    return provideInstance(module, applicationProvider);
  }

  public static GithubRoomDatabase provideInstance(
      GithubRoomDBModule module, Provider<Application> applicationProvider) {
    return proxyProvideGithubRoomDatabase(module, applicationProvider.get());
  }

  public static GithubRoomDBModule_ProvideGithubRoomDatabaseFactory create(
      GithubRoomDBModule module, Provider<Application> applicationProvider) {
    return new GithubRoomDBModule_ProvideGithubRoomDatabaseFactory(module, applicationProvider);
  }

  public static GithubRoomDatabase proxyProvideGithubRoomDatabase(
      GithubRoomDBModule instance, Application application) {
    return Preconditions.checkNotNull(
        instance.provideGithubRoomDatabase(application),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
